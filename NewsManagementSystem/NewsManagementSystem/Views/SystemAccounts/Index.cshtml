@model Repositories.PaggingItem.PaginatedList<Repositories.DTOs.SystemAccountDTOs.GetSystemAccountDTO>


@{
    ViewData["Title"] = "Index";
}

<div id="adminContent">
    <h1>Index</h1>

    <form asp-action="Search" method="get" class="mb-5">
        <label for="nameSearch">Search:</label>
        <input type="text" id="searchString" name="searchString" placeholder="Enter name...">


        <input type="hidden" id="pageNumber" name="pageNumber" min="1" value="1">

        <button type="submit">Search</button>
    </form>


    <button type="button" class="btn btn-primary" onclick="loadCreateForm()">Create Account</button>

    <table class="table">
        <thead>
            <tr>
                <th>
                    FullName
                </th>
                <th>
                    Email
                </th>
                <th>
                    Role
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccountName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccountEmail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RoleName)
                    </td>
                    <td>
                        <button class="btn btn-warning" onclick="loadEditForm(@item.AccountId)">Edit</button> |
                        <a class="btn btn-info" asp-action="Profile" asp-route-id="@item.AccountId">Profile</a> |
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.AccountId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        @if (Model.HasPreviousPage)
        {
            <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" class="btn btn-primary">Previous</a>
        }

        <span>Page @Model.PageNumber of @Model.TotalPages</span>

        @if (Model.HasNextPage)
        {
            <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" class="btn btn-primary">Next</a>

        }
    </div>
</div>

<div id="#roleDeniedContent">
    You are not allow to view this page!
</div>

<!-- Create Modal -->
<div class="modal fade" id="createModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create Account</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="createFormContainer">
                <!-- Create form will be loaded here -->
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Account</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="editFormContainer">
                <!-- Edit form will be loaded here -->
            </div>
        </div>
    </div>
</div>

<script>
    function loadCreateForm() {
        $.get('/SystemAccounts/Create', function (data) {
            $('#createFormContainer').html(data);
            $('#createModal').modal('show');
        });
    }

    function loadEditForm(id) {
        $.get('/SystemAccounts/Edit/' + id, function (data) {
            $('#editFormContainer').html(data);
            $('#editModal').modal('show');
        });
    }

    $(document).on("submit", "#createAccountForm", function (event) {
        event.preventDefault();
        $.post('/SystemAccounts/Create', $(this).serialize(), function () {
            $('#createModal').modal('hide');
            location.reload();
        });
    });

	$(document).on("submit", "#editAccountForm", function (event) {
		event.preventDefault();
		$.post('/SystemAccounts/Edit', $(this).serialize(), function () {
			$('#editModal').modal('hide');
			location.reload();
		});
	});

	$(document).ready(function () {
	    function decodeJwt(token) {
			var base64Url = token.split('.')[1];
			var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
			var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
						return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
					}).join(''));
			return JSON.parse(jsonPayload);
				}

		var jwtToken = localStorage.getItem("jwt_token");

		if (jwtToken) {
			var decodedToken = decodeJwt(jwtToken);
			var role = decodedToken["http://schemas.microsoft.com/ws/2008/06/identity/claims/role"];

			if (role === "0") { // Admin
				$("#adminContent").show(); // Show admin-only content
                $("#roleDeniedContent").hide() // Hide role denied content
			} else { // Non-admin
				$("#adminContent").hide(); // Hide admin-only content
                $("#roleDeniedContent").show() // Show role denied content
			}
		} else {
			$("#adminContent").hide(); // Hide if no token (not logged in)
            $("#roleDeniedContent").show() // Show role denied content
		}
	});
</script>
